<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Li&#39;word</title>
  
  
  <link href="https://kaki-jiu.github.io/atom.xml" rel="self"/>
  
  <link href="https://kaki-jiu.github.io/"/>
  <updated>2022-08-24T14:59:28.858Z</updated>
  <id>https://kaki-jiu.github.io/</id>
  
  <author>
    <name>Zhenhui Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vivo X30 换电池实录</title>
    <link href="https://kaki-jiu.github.io/2022/08/24/vivo-X30-%E6%8D%A2%E7%94%B5%E6%B1%A0%E5%AE%9E%E5%BD%95/"/>
    <id>https://kaki-jiu.github.io/2022/08/24/vivo-X30-%E6%8D%A2%E7%94%B5%E6%B1%A0%E5%AE%9E%E5%BD%95/</id>
    <published>2022-08-24T13:33:06.000Z</published>
    <updated>2022-08-24T14:59:28.858Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="0x00-开始前的话"><a class="markdownIt-Anchor" href="#0x00-开始前的话"></a> 0x00 开始前的话</h1><p>vivo X30购于2022年七月, 标称电池容量4350毫安<s>但是实际只有3600</s>, 到2022年容量只剩下2200毫安, 测试方法: <a href="https://www.coolapk.com/apk/com.liming.batteryinfo">酷安的电箱</a></p><p>所以产生了换电池的想法<br><img src="http://39.101.77.34:10000/images/2022/08/24/07014d2e607847561d63ab026ea8ed3b.jpg" alt="手机原貌"></p><h1 id="0x01-寻找电池型号"><a class="markdownIt-Anchor" href="#0x01-寻找电池型号"></a> 0x01 寻找电池型号</h1><p>最简单的方法当然是拆机 , 但是我显然不具备条件, 可以先到短视频平台搜索对应手机型号的拆机/换电池视频, 看不清楚信号不要紧, 打开淘宝搜索<code>vivo X30 原装电池</code>, 找到差不多样子就可以看到高清图片了, 型号B-K5<br><img src="http://39.101.77.34:10000/images/2022/08/24/a6074db030da2e8f5765e2ffe0b1597f.jpg" alt="电池详情"></p><p>可能还会搜到类似八千毫安的奇怪东西, 可以参考酷安老哥的的文章<s>链接找不到了</s>, 咨询店家简直一模一样…</p><h1 id="0x02-到手拆机"><a class="markdownIt-Anchor" href="#0x02-到手拆机"></a> 0x02 到手拆机</h1><p>需要的工具<br>撬片(薄铁片), 撬棍, 尖角小镊子, 卫生纸, 相机贴, 带磁性的十字和梅花螺丝刀(淘宝送到工具一言难尽)</p><h2 id="打开后盖"><a class="markdownIt-Anchor" href="#打开后盖"></a> 打开后盖</h2><p>用吹风机加热后盖两分钟(感觉没什么用, 我打了十几分钟原神), 一般撬片是从电池端开拆的, 但是我感觉从主板好一点(小心变砖), 毕竟天天加热</p><p>后盖本身是有一点大概一两毫米的缝隙的, 这个撬片进去不够用, 所以下手重一点, 但是要注意方向, 别把主板干费了, 撬片挺锋利的, 垫两张卫生纸</p><p><img src="http://39.101.77.34:10000/images/2022/08/24/4bfb3b740634198d00b91e3cecd5aeeb.jpg" alt="撬片深度示意图1"></p><p><img src="http://39.101.77.34:10000/images/2022/08/24/2.jpg" alt="撬片深度示意图2"></p><p>撬片带胶的地方就是插进去的</p><h2 id="拆卸主板屏蔽层保护壳"><a class="markdownIt-Anchor" href="#拆卸主板屏蔽层保护壳"></a> 拆卸主板屏蔽层/保护壳</h2><p><img src="http://39.101.77.34:10000/images/2022/08/24/9823342b423df0d72d4bbc8119e7628a.jpg" alt="拆背板后示意图"></p><p>从左向右依次是主板, NFC线圈贴纸, 电池, 底部小板(麦克风, 充电口, 送话器)</p><p>使用相机贴粘上相机防止进灰, 我这垃圾手机就不管了</p><p><img src="http://39.101.77.34:10000/images/2022/08/24/a89e7535b09c01d52631a06d4bb55ea7.jpg" alt="螺丝示意图"></p><p>围绕一圈把螺丝拆下来, 没磁芯可以用镊子夹出来<s>比如我</s>, 注意NFC贴纸上方的被保修贴盖住的梅花螺丝, 干不下来不要硬干, 看看那个螺丝没拆</p><p>(不过NFC断掉还能用<br><img src="http://39.101.77.34:10000/images/2022/08/24/a89e7535b09c01d52631a06d4bb55ea7.jpg" alt="断了的NFC"></p><p><img src="http://39.101.77.34:10000/images/2022/08/24/NFC2.jpg" alt="断了NFC的手机"></p><h2 id="拆装电池"><a class="markdownIt-Anchor" href="#拆装电池"></a> 拆装电池</h2><p>断开电池和主板之间的三个排线(电池, SIM卡, 还有不知道啥)</p><p>用电池的拉条把电池拉出来(实际电池胶特别紧, 我用撬棒翘起来的, 硬拉可能屏幕废掉), 注意透明的是电池底胶, 拉不动的</p><p><img src="http://39.101.77.34:10000/images/2022/08/24/e9e8384479a74b0e2cdac1ef647877a8.jpg" alt="弯曲的电池"></p><p>打上胶把新电池安进去, 然而我的商家没送胶, 遂作罢, 底胶还有一点</p><p>连接三个插排, 开机测试</p><p>ok</p><h2 id="装回背甲"><a class="markdownIt-Anchor" href="#装回背甲"></a> 装回背甲</h2><p><img src="http://39.101.77.34:10000/images/2022/08/24/d00d1bfa017a9e15f2bdda2807539747.jpg" alt="背甲内部全貌"></p><p>应当是先打胶水然后上的, 但是清理残胶把背甲搞碎了, 而且本来还有点粘性, 也还在用手机套, 遂放弃</p><p><img src="http://39.101.77.34:10000/images/2022/08/24/3c17de7c4478bdca744aa3c210df0233.jpg" alt="碎掉的背甲"></p><h1 id="0x03-出现的故障"><a class="markdownIt-Anchor" href="#0x03-出现的故障"></a> 0x03 出现的故障</h1><ul><li><p>NFC<br><img src="http://39.101.77.34:10000/images/2022/08/24/a89e7535b09c01d52631a06d4bb55ea7.jpg" alt="断了的NFC"><br>NFC寄了但还能用</p></li><li><p>相机位置不知名贴纸<br><img src="http://39.101.77.34:10000/images/2022/08/24/7293e4d73af0c49cc9fe3748692a1c69.jpg" alt="相机位置不知名贴纸"><br>用镊子很轻易拆除, 不影响使用, 不知道是啥</p></li><li><p>底部小板防静电层maybe<br><img src="http://39.101.77.34:10000/images/2022/08/24/f96752d5e68e16bf98040114248ec78d.jpg" alt="底部小板防静电层"><br>右边一条扭曲的丝, 没拔掉, 目前不影响使用</p></li><li><p>部分背甲碎裂</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;0x00-开始前的话&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-开始前的话&quot;&gt;&lt;/a&gt; 0x00 开始前的话&lt;/h1&gt;
&lt;p&gt;vivo X30购于2022年七月, 标称电池容量4350毫安&lt;s&gt;但</summary>
      
    
    
    
    <category term="玩机" scheme="https://kaki-jiu.github.io/categories/%E7%8E%A9%E6%9C%BA/"/>
    
    
    <category term="vivo X30" scheme="https://kaki-jiu.github.io/tags/vivo-X30/"/>
    
  </entry>
  
  <entry>
    <title>hexo 写博客流程及博客迁移</title>
    <link href="https://kaki-jiu.github.io/2022/08/23/hexo-%E5%86%99%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B%E5%8F%8A%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/"/>
    <id>https://kaki-jiu.github.io/2022/08/23/hexo-%E5%86%99%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B%E5%8F%8A%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/</id>
    <published>2022-08-22T16:25:33.000Z</published>
    <updated>2022-08-22T17:48:51.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-写在前面的话"><a class="markdownIt-Anchor" href="#0x00-写在前面的话"></a> 0x00 写在前面的话</h1><p>上次搞博客已经是半个月之前的事情了, 懒.jpg</p><p>由于众所周知的原因现在记忆力衰退的厉害, 很多事情不专门记一下就忘的差不多了, 所以为了本科毕业之后有个好工作, 搭建了这个博客来记录自己的学习历程<s>迈出大学第一步</s></p><p>同时现在回头看自己写的第一篇博客简直一塌糊涂, 正好趁今天熬夜把它重构一下</p><h1 id="0x01-新建一篇博文"><a class="markdownIt-Anchor" href="#0x01-新建一篇博文"></a> 0x01 新建一篇博文</h1><ul><li><p>在bolg根目录下运行<code>hexo new post &quot;title&quot;</code>, 此时发生了以下事件</p><ol><li>hexo依据<code>scaffolds/post.md</code>为模板在<code>source/_posts</code>创建<code>title.md</code>, 具体路径依赖于使用的主题, 我的是<a href="https://github.com/cofess/hexo-theme-pure/">pure</a></li><li>如果<code>_config.yml</code>中<code>post_asset_folder: true</code>的话会在一个同时生成名为<code>title</code>的文件夹用于存放图片</li></ol></li><li><p>打开并编辑<code>source/_posts/title.md</code><br>依照<code>post.md</code>最上方会有<code>---</code>夹起来的<a href="https://hexo.io/zh-cn/docs/front-matter">front-matter</a>用于说明文件参数, 比较重要的有</p><ul><li>title: 文章标题, 是博文预览时最大的那个字, 自动生成, 与<code>new post</code>一致, 当然瞎改也没有什么影响, 不会影响编译和对同名文件夹图片的调用, 甚至可以在<code>_post</code>下新建md文件直接xie, 只要符合文档里的格式需求即可</li><li>tags: 对应侧边栏标签, 初始有一个all, 文章有新标签时会自动创建, 区分大小写, 形式如下, 参考<a href="https://www.runoob.com/w3cnote/yaml-intro.html">yml数组</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">  - blog</span><br></pre></td></tr></table></figure><ul><li>category: 侧边栏分类, 与tags同之<br><img src="/2022/08/23/hexo-%E5%86%99%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B%E5%8F%8A%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/%E5%85%B3%E4%BA%8Ecategory%E6%B2%A1%E7%9C%8B%E6%87%82.jpg" alt="关于category没看懂"></li><li>update/date: 更新时间/时间, <s>可以用来补作业</s>, 目前我还用不到</li><li>comment: false 关闭评论系统, 目前还没有构建评论系统</li></ul></li><li><p>根目录运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>本地查看, 使用<code>hexo d</code>部署到github page上</p><ul><li><code>hexo d</code>部署需要配置<code>_config.yml</code>中的如下内容以及git和SSH key, 留个坑和迁移一起补</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:&lt;name&gt;/&lt;name&gt;.github.io.git</span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure><ul><li>本地查看也可同时运行<code>hexo clean &amp;&amp; hexo g -w</code>和<code>hexo s</code>实时反映内容, 参见<a href="https://hexo.io/zh-cn/docs/commands">hexo 命令</a></li></ul></li><li><p>删除博文:删除对应的<code>title.md</code>和<code>title</code>文件夹</p></li></ul><h1 id="0x02-博客本地存档转移"><a class="markdownIt-Anchor" href="#0x02-博客本地存档转移"></a> 0x02 博客本地存档转移</h1><p>留坑后补</p><h1 id="0x03-博客迁移"><a class="markdownIt-Anchor" href="#0x03-博客迁移"></a> 0x03 博客迁移</h1><p>留坑后补</p>]]></content>
    
    
    <summary type="html">test这是什么</summary>
    
    
    
    <category term="blog" scheme="https://kaki-jiu.github.io/categories/blog/"/>
    
    
    <category term="hexo" scheme="https://kaki-jiu.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 下 markdown 图片本地索引</title>
    <link href="https://kaki-jiu.github.io/2022/08/05/hexo-%E4%B8%8B-markdown-%E5%9B%BE%E7%89%87%E6%9C%AC%E5%9C%B0%E7%B4%A2%E5%BC%95/"/>
    <id>https://kaki-jiu.github.io/2022/08/05/hexo-%E4%B8%8B-markdown-%E5%9B%BE%E7%89%87%E6%9C%AC%E5%9C%B0%E7%B4%A2%E5%BC%95/</id>
    <published>2022-08-05T13:02:14.000Z</published>
    <updated>2022-08-23T04:31:34.663Z</updated>
    
    <content type="html"><![CDATA[<p>插件地址:<a href="https://github.com/7ym0n/hexo-asset-image">https://github.com/7ym0n/hexo-asset-image</a></p><p>关于插件下载, 正常只需要<code>npm install hexo-asset-image --save</code>, 但是由于不知名原因一直fail, 可以手动下载, 具体方法如下</p><ol><li>在本地博客根目录下的<code>./node_module/</code>目录下删除<code>hexo-asset-image</code>文件夹, 运行<code>git clone https://github.com/7ym0n/hexo-asset-image.git</code></li><li>在<code>hexo-asset-image</code>文件夹下运行<code>npm install -g</code>, 具体插件可以参考插件仓库给出说明, 可能还需要修改<code>_config.yml</code>文件(本插件不需要)</li></ol><p>修改<code>_config.yml</code>的<code>post_asset_folder: true</code>, 会导致在<code>hexo new post</code>时自动创建同名文件夹用于保存图片</p><p>具体引用方式<code>![image_introduction](./title_name/image_name.jpg)</code>, 注意</p><ol><li>本地链接里的<code>.</code></li><li>链接文件夹不可以跨文章, 可以参考github仓库里的编译结果</li><li>中文使用url编码, 在vscode下<code>Markdown Preview Enhanced</code>插件可以实现自动填充</li><li>本地索引不在page下起作用</li></ol><p>运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>本地检查效果</p><p>最后还是自己建一个图床省事</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;插件地址:&lt;a href=&quot;https://github.com/7ym0n/hexo-asset-image&quot;&gt;https://github.com/7ym0n/hexo-asset-image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于插件下载, 正常只需要&lt;code&gt;npm inst</summary>
      
    
    
    
    <category term="markdown" scheme="https://kaki-jiu.github.io/categories/markdown/"/>
    
    <category term="blog" scheme="https://kaki-jiu.github.io/categories/markdown/blog/"/>
    
    
    <category term="hexo" scheme="https://kaki-jiu.github.io/tags/hexo/"/>
    
    <category term="markdown" scheme="https://kaki-jiu.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo创建自己的github page</title>
    <link href="https://kaki-jiu.github.io/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/"/>
    <id>https://kaki-jiu.github.io/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/</id>
    <published>2022-08-05T10:13:40.000Z</published>
    <updated>2022-08-22T18:01:10.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-写在前面的碎碎念"><a class="markdownIt-Anchor" href="#0x00-写在前面的碎碎念"></a> 0x00 写在前面的碎碎念</h1><p>出于一些原因想要创建自己的博客记录, 可以参见<a href="https://kaki-jiu.github.io/about/">about</a></p><h1 id="0x01-开始之前需要做的事"><a class="markdownIt-Anchor" href="#0x01-开始之前需要做的事"></a> 0x01 开始之前需要做的事</h1><ol><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">安装git</a>, 使用git version查看是否成功</li><li><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">安装node.js</a>, 使用node -v查看是否成功</li><li>安装hexo命令行支持<code>$ npm install -g hexo-cli</code><br>文档里有关于将hexo添加到path里的说明, 但是我搞不清楚hexo的安装目录在哪里, 同时hexo-cli和hexo好像不太一样, 不懂</li><li>了解一些基本概念以帮助解决出现的问题<ul><li>hexo的官方中文文档:<a href="https://hexo.io/zh-cn/docs/setup">https://hexo.io/zh-cn/docs/setup</a></li><li>一份很好的视频教程, , 时常大约25min:<a href="https://www.youtube.com/c/%E5%91%A8%E4%B8%89Tech/videos">YouTube</a> or <a href="https://space.bilibili.com/362224537">bilibili</a>, 本文的大部分内容都来自此处, 基本可以看作是复述, 自己实在是太菜了qaq</li></ul></li></ol><h1 id="0x02-初始化工作文件夹"><a class="markdownIt-Anchor" href="#0x02-初始化工作文件夹"></a> 0x02 初始化工作文件夹</h1><h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2><p>查看我之前是否安装过插件(因为之前创建中间失败了一次)</p><p><code>npm list hexo-deployer-git</code></p><p><img src="/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/npm%20list%20hexo-deployer-git.jpg" alt="命令输出"><br>看到什么都没有, 因为hexo管理脚本和插件时<a href="https://hexo.io/zh-cn/docs/plugins.html">直接安装在当前工作目录下</a>, 省去了remake的麻烦</p><h2 id="init文件夹"><a class="markdownIt-Anchor" href="#init文件夹"></a> init文件夹,</h2><p>在<code>D:\</code>的cmd下输入<code>hexo init bolg</code>, 创建一个名称为blog的工作目录, clone了<a href="https://github.com/hexojs/hexo-starter">https://github.com/hexojs/hexo-starter</a>并添加了一些基础脚本和插件</p><p><code>cd blog</code>, <code>npm install</code>作用:切换到工作目录, 把可能没装上的包再安装一次</p><h2 id="文件夹结构"><a class="markdownIt-Anchor" href="#文件夹结构"></a> 文件夹结构</h2><p>因为windows下tree命令参数太少, 所以文件结构是手敲的, 后面也是自己的理解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.github 可能是类似.git文件夹一样说明当前文件情况</span><br><span class="line">node-modules nodejs脚本和插件存放目录</span><br><span class="line">scaffolds  创建文章时的模板文件</span><br><span class="line">source `_post`文件夹存放自己写的文章, 还可以创建`_data`文件夹来存放公共数据(需要在`_config.yml`下开启), 比如友链之类</span><br><span class="line">theme 下载的主题, 需要在`_config.yml`启用</span><br><span class="line">_config.yml 站点配置文件, 说明网站模板, 具有第一优先级</span><br><span class="line">_config.landspace.yml 默认启用的一个主题配置, 可以看到`_config.yml`下theme默认值就是`landscape`</span><br><span class="line">.gitignore 说明git操作应当忽略的文件</span><br><span class="line">package.json 说明文件夹里使用的包(和npm有关系, 但是对nodejs和npm知之甚少, 只是自己的理解)</span><br><span class="line">package-lock.json 对`package.json`的详细说明</span><br></pre></td></tr></table></figure><h3 id="关于-scaffolds-文件的一点说明"><a class="markdownIt-Anchor" href="#关于-scaffolds-文件的一点说明"></a> 关于 scaffolds 文件的一点说明</h3><p>在具体新建页面和创建文章是会用到</p><ul><li>draft</li><li>page</li><li>post</li></ul><h2 id="本地上线"><a class="markdownIt-Anchor" href="#本地上线"></a> 本地上线</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #g就是generate生成`public`文件夹, 也就是我们在网页看到的东西</span><br><span class="line">hexo s -p 5000 #s就是sever, -p指定端口, 默认是4000端口</span><br></pre></td></tr></table></figure><p>在浏览器访问<a href="http://localhost:5000/">http://localhost:5000/</a>就可以看到样例</p><p>同时在<a href="https://www.youtube.com/c/%E5%91%A8%E4%B8%89Tech/videos">周三 Tech</a>的视频中提到可以使用两个shell中同时执行<code>hexo clean &amp;&amp; hexo g -w</code> 和 <code>hexo s</code>来在浏览器中实时反映调试结果, 这对一会修改模板相当有用, 改的时候没事切到shell里面看看有没有报错</p><h1 id="0x03-导入模板"><a class="markdownIt-Anchor" href="#0x03-导入模板"></a> 0x03 导入模板</h1><p>参考<a href="https://blog.csdn.net/yaorongke/article/details/119089190">这个博客</a>里的Fluid主题</p><p>我本来想要使用的<a href="https://github.com/fengkx/hexo-theme-purer">purer主题</a>, 它的文档在<a href="https://purer.netlify.app/document-zh/">这里</a>, 但是我无法按照他的文档顺利部署, 后来发现了一个类似样子的<a href="https://github.com/cofess/hexo-theme-pure">pure</a>, 和一份前辈的<a href="https://blog.csdn.net/qq_42983502/article/details/106745567">笔记</a>, 意外发现用起来还不错</p><p>开始之前可以阅读一遍<a href="https://hexo.io/zh-cn/docs/configuration">hexo关于参数的说明</a>, 按照需求设置<code>_config.yml</code></p><p><code>git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</code></p><p>这个命令是将模板下载到<code>theme</code>文件夹下, 在git bash下老是10054, 在cmd下好一点</p><p>在<code>_config.yml</code>中启用pure: 将<code>theme</code>设置为<code>pure</code></p><p>安装相关依赖, 这里我只列出出我自己需要的, 可以参考<a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">pure的文档</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-deployer-git --save    #部署 hexo d</span><br><span class="line">npm install hexo-generator-feed --save  #rss订阅</span><br></pre></td></tr></table></figure><p>至此网站已经可以跑起来了, 但是还需要调整一些参数来达到<code>实用</code></p><p><s>我使用了<code>独立的 _config.[theme].yml 文件</code>方法来修改配置, 参见<a href="https://hexo.io/zh-cn/docs/configuration#%E4%BD%BF%E7%94%A8%E4%BB%A3%E6%9B%BF%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">此处</a>, 按照需求修改<code>/themes/pure/_config.yml.example</code>后, 执行<code>cp ./themes/pure/_config.yml.example _config.pure.yml</code>复制到根目录</s>, 口胡, hexo -v输出只有hexo-cli没有hexo, 那个是hexo 5以上支持的, 不懂.jpg</p><p><img src="/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/hexo%20-v.jpg" alt="hexo -v输出"></p><p>使用前记得将<code>themes\pure\_source</code>下的东西复制到<code>source</code>, 可以改一改相关的md文件</p><p>直接修改<code>_config.yml</code>和<code>themes/pure/_config.yml</code><br>关于yml写法可以看一下<a href="https://www.ruanyifeng.com/blog/2016/07/yaml.html">阮一峰的博客</a><br>关于pure还找到了<a href="https://github.com/hwame/hwame.github.io">hwame的博客</a><s>给大佬磕一个</s>, 里面有关于左面标签的魔改成<a href="https://hwame.top/20200520/hello-hexo-troubleshooting.html#7-%E6%B7%BB%E5%8A%A0%E3%80%8C%E7%9B%B8%E5%86%8C%E3%80%8D%E9%A1%B5%E9%9D%A2">相册</a>以及<a href="https://hwame.top/20200520/hello-hexo-optimization.html">评论系统</a></p><p>一个tips:foo/bar是自二战时的俚语FUBAR(Fucked Up Beyond All Repair), 是坏到无法修缮的意思, 国外的程序员用这些词很大程度上是为了幽默, 当变量, 函数, 或命令本身不太重要的时候foobar, foo, bar, baz和qux就被用来充当这些实体的名字, 没有任何意义<s>大雾</s></p><p>一个hexo客户端:<a href="https://github.com/gaoyoubo/hexo-client">https://github.com/gaoyoubo/hexo-client</a></p><h1 id="0x04-评论系统"><a class="markdownIt-Anchor" href="#0x04-评论系统"></a> 0x04 评论系统</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x00-写在前面的碎碎念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-写在前面的碎碎念&quot;&gt;&lt;/a&gt; 0x00 写在前面的碎碎念&lt;/h1&gt;
&lt;p&gt;出于一些原因想要创建自己的博客记录, 可以参见&lt;a href=&quot;https:/</summary>
      
    
    
    
    <category term="blog" scheme="https://kaki-jiu.github.io/categories/blog/"/>
    
    
    <category term="hexo" scheme="https://kaki-jiu.github.io/tags/hexo/"/>
    
    <category term="pure" scheme="https://kaki-jiu.github.io/tags/pure/"/>
    
  </entry>
  
</feed>
