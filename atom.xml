<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Li&#39;word</title>
  
  
  <link href="https://kaki-jiu.github.io/atom.xml" rel="self"/>
  
  <link href="https://kaki-jiu.github.io/"/>
  <updated>2022-08-22T15:34:46.999Z</updated>
  <id>https://kaki-jiu.github.io/</id>
  
  <author>
    <name>Zhenhui Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo 下 markdown 图片本地索引</title>
    <link href="https://kaki-jiu.github.io/2022/08/05/hexo-%E4%B8%8B-markdown-%E5%9B%BE%E7%89%87%E6%9C%AC%E5%9C%B0%E7%B4%A2%E5%BC%95/"/>
    <id>https://kaki-jiu.github.io/2022/08/05/hexo-%E4%B8%8B-markdown-%E5%9B%BE%E7%89%87%E6%9C%AC%E5%9C%B0%E7%B4%A2%E5%BC%95/</id>
    <published>2022-08-05T13:02:14.000Z</published>
    <updated>2022-08-22T15:34:46.999Z</updated>
    
    <content type="html"><![CDATA[<p>插件地址:<a href="https://github.com/7ym0n/hexo-asset-image">https://github.com/7ym0n/hexo-asset-image</a></p><p>关于插件下载,正常只需要<code>npm install hexo-asset-image --save</code>,但是由于不知名原因一直fail,可以手动下载,具体方法如下</p><ol><li>在本地博客根目录下的<code>./node_module/</code>目录下删除<code>hexo-asset-image</code>文件夹,运行<code>git clone https://github.com/7ym0n/hexo-asset-image.git</code></li><li>在<code>hexo-asset-image</code>文件夹下运行<code>npm install -g</code>,具体插件可以参考插件仓库给出说明,可能还需要修改<code>_config.yml</code>文件(本插件不需要)</li></ol><p>修改<code>_config.yml</code>的<code>post_asset_folder: true</code>, 会导致在<code>hexo new post</code>时自动创建同名文件夹用于保存图片</p><p>具体引用方式<code>![image_introduction](./title_name/image_name.jpg)</code>, 注意</p><ol><li>本地链接里的<code>.</code></li><li>链接文件夹不可以跨文章,可以参考github仓库里的编译结果</li><li>中文使用url编码,在vscode下<code>Markdown Preview Enhanced</code>插件可以实现自动填充</li></ol><p>运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>本地检查效果</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;插件地址:&lt;a href=&quot;https://github.com/7ym0n/hexo-asset-image&quot;&gt;https://github.com/7ym0n/hexo-asset-image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于插件下载,正常只需要&lt;code&gt;npm insta</summary>
      
    
    
    
    <category term="博客" scheme="https://kaki-jiu.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://kaki-jiu.github.io/tags/hexo/"/>
    
    <category term="markdown" scheme="https://kaki-jiu.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo创建自己的github page</title>
    <link href="https://kaki-jiu.github.io/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/"/>
    <id>https://kaki-jiu.github.io/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/</id>
    <published>2022-08-05T10:13:40.000Z</published>
    <updated>2022-08-22T15:36:49.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-写在前面的碎碎念"><a class="markdownIt-Anchor" href="#0x00-写在前面的碎碎念"></a> 0x00 写在前面的碎碎念</h1><p>出于一些原因想要创建自己的博客记录, 可以参见文章Hello Word</p><h1 id="0x01-开始之前需要做的事"><a class="markdownIt-Anchor" href="#0x01-开始之前需要做的事"></a> 0x01 开始之前需要做的事</h1><ol><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">安装git</a>, 使用git version查看是否成功</li><li><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">安装node.js</a>, 使用node -v查看是否成功</li><li>安装hexo命令行支持<code>$ npm install -g hexo-cli</code><br>文档里有关于将hexo添加到path里的说明, 但是我搞不清楚hexo的安装目录在哪里,同时hexo-cli和hexo好像不太一样,不懂</li><li>了解一些基本概念以帮助解决出现的问题<ul><li>hexo的官方中文文档:<a href="https://hexo.io/zh-cn/docs/setup">https://hexo.io/zh-cn/docs/setup</a></li><li>一份很好的视频教程,时常大约25min:<a href="https://www.youtube.com/c/%E5%91%A8%E4%B8%89Tech/videos">YouTube</a> or <a href="https://space.bilibili.com/362224537">bilibili</a>, 本文的大部分内容都来自此处, 基本可以看作是复述, 自己实在是太菜了qaq</li></ul></li></ol><h1 id="0x02-初始化工作文件夹"><a class="markdownIt-Anchor" href="#0x02-初始化工作文件夹"></a> 0x02 初始化工作文件夹</h1><h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2><p>查看我之前是否安装过插件(因为之前创建中间失败了一次)</p><blockquote><p>npm list hexo-deployer-git</p></blockquote><p><img src="/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/npm%20list%20hexo-deployer-git.jpg" alt="命令输出"><br>看到什么都没有, 可能是因为hexo管理脚本和插件时<a href="https://hexo.io/zh-cn/docs/plugins.html">直接安装在当前工作目录下</a>, 省去了remake的麻烦</p><h2 id="init文件夹"><a class="markdownIt-Anchor" href="#init文件夹"></a> init文件夹,</h2><p>在<code>D:\</code>的cmd下输入<code>hexo init bolg</code>, 创建一个名称为blog的工作目录, clone了<a href="https://github.com/hexojs/hexo-starter">https://github.com/hexojs/hexo-starter</a>并添加了一些基础脚本和插件</p><p><code>cd blog</code>, <code>npm install</code>作用:切换到工作目录, 把可能没装上的包再安装一次</p><h2 id="文件夹结构"><a class="markdownIt-Anchor" href="#文件夹结构"></a> 文件夹结构</h2><p>因为windows下tree命令参数太少, 所以文件结构是我手敲的, 后面也是我自己的理解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.github 可能是类似.git文件夹一样说明当前文件情况</span><br><span class="line">node-modules nodejs脚本和插件存放目录</span><br><span class="line">scaffolds  创建文章时默认的模板文件</span><br><span class="line">source `_post`文件夹存放自己写的文章, 还可以创建`_data`文件夹来存放公共数据(需要在`_config.yml`下开启), 比如友链之类</span><br><span class="line">theme 下载的主题, 需要在`_config.yml`启用</span><br><span class="line">_config.yml 站点配置文件, 说明网站模板, 具有第一优先级</span><br><span class="line">_config.landspace.yml 默认启用的一个主题配置, 可以看到`_config.yml`下theme默认值就是`landscape`</span><br><span class="line">.gitignore 说明git操作应当忽略的文件</span><br><span class="line">package.json 说明文件夹里使用的包(和npm有关系, 但是我对nodejs和npm知之甚少,这里只是我自己的理解)</span><br><span class="line">package-lock.json 对`package.json`的详细说明</span><br></pre></td></tr></table></figure><h3 id="关于-scaffolds-文件的一点说明"><a class="markdownIt-Anchor" href="#关于-scaffolds-文件的一点说明"></a> 关于 scaffolds 文件的一点说明</h3><p>在具体新建页面和创建文章是会用到</p><p>先留个位置,之后再更新</p><h2 id="本地上线"><a class="markdownIt-Anchor" href="#本地上线"></a> 本地上线</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #g就是generate生成`public`文件夹, 也就是我们在网页看到的东西</span><br><span class="line">hexo s -p 5000 #s就是sever, -p指定端口, 默认是4000端口</span><br></pre></td></tr></table></figure><p>在浏览器访问<a href="http://localhost:5000/">http://localhost:5000/</a>就可以看到样例</p><p>同时在<a href="https://www.youtube.com/c/%E5%91%A8%E4%B8%89Tech/videos">周三 Tech</a>的视频中提到可以使用两个shell中同时执行<code>hexo clean &amp;&amp; hexo g -w</code> 和 <code>hexo s</code>来在浏览器中实时反映调试结果,这对一会修改模板相当有用,改的时候没事切到shell里面看看有没有报错</p><h1 id="0x03-导入模板"><a class="markdownIt-Anchor" href="#0x03-导入模板"></a> 0x03 导入模板</h1><p>参考<a href="https://blog.csdn.net/yaorongke/article/details/119089190">这个博客</a>里的Fluid主题</p><p>我本来想要使用的<a href="https://github.com/fengkx/hexo-theme-purer">purer主题</a>, 它的文档在<a href="https://purer.netlify.app/document-zh/">这里</a>, 但是我无法按照他的文档顺利部署, 后来发现了一个类似样子的<a href="https://github.com/cofess/hexo-theme-pure">pure</a>, 和一份前人的<a href="https://blog.csdn.net/qq_42983502/article/details/106745567">笔记</a>,而且意外发现用起来还不错</p><p>开始之前可以阅读一遍<a href="https://hexo.io/zh-cn/docs/configuration">hexo关于参数的说明</a>, 按照需求设置<code>_config.yml</code></p><blockquote><p>git clone <a href="https://github.com/cofess/hexo-theme-pure.git">https://github.com/cofess/hexo-theme-pure.git</a> themes/pure</p></blockquote><p>这个命令是将模板下载到<code>theme</code>文件夹下, 在git bash下老是10054, 在cmd下好一点</p><p>在<code>_config.yml</code>中启用pure: 将<code>theme</code>设置为<code>pure</code></p><p>安装相关依赖,这里我只列出出我自己需要的,可以参考<a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">pure的文档</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-deployer-git --save    #部署</span><br><span class="line">npm install hexo-generator-feed --save  #rss订阅</span><br></pre></td></tr></table></figure><p>至此网站已经可以跑起来了, 但是还需要调整一些参数来达到<code>实用</code></p><p><s>我使用了<code>独立的 _config.[theme].yml 文件</code>方法来修改配置, 参见<a href="https://hexo.io/zh-cn/docs/configuration#%E4%BD%BF%E7%94%A8%E4%BB%A3%E6%9B%BF%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">此处</a>, 按照需求修改<code>/themes/pure/_config.yml.example</code>后,执行<code>cp ./themes/pure/_config.yml.example _config.pure.yml</code>复制到根目录</s>, 别瞎jb搞了,我的hexo -v输出只有hexo-cli没有hexo,那个是hexo 5以上支持的,不懂.jpg</p><p><img src="/2022/08/05/%E4%BD%BF%E7%94%A8hexo%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github-page/hexo%20-v.jpg" alt="hexo -v输出"></p><p>使用前记得将<code>themes\pure\_source</code>下的东西复制到<code>source</code></p><p>直接修改<code>_config.yml</code>和<code>themes/pure/_config.yml</code><br>关于yml写法可以看一下<a href="https://www.ruanyifeng.com/blog/2016/07/yaml.html">阮一峰的博客</a><br>关于pure还找到了<a href="https://github.com/hwame/hwame.github.io">hwame的博客</a><s>给大佬磕一个</s>,里面有关于左面标签的魔改成<a href="https://hwame.top/20200520/hello-hexo-troubleshooting.html#7-%E6%B7%BB%E5%8A%A0%E3%80%8C%E7%9B%B8%E5%86%8C%E3%80%8D%E9%A1%B5%E9%9D%A2">相册</a>以及<a href="https://hwame.top/20200520/hello-hexo-optimization.html">评论系统</a></p><p>一个tips:foo/bar是自二战时的俚语FUBAR(Fucked Up Beyond All Repair),是坏到无法修缮的意思,国外的程序员用这些词很大程度上是为了幽默,当变量,函数,或命令本身不太重要的时候foobar,foo,bar,baz和qux就被用来充当这些实体的名字,没有任何意义<s>大雾</s></p><p>最后一个hexo客户端:<a href="https://github.com/gaoyoubo/hexo-client">https://github.com/gaoyoubo/hexo-client</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x00-写在前面的碎碎念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-写在前面的碎碎念&quot;&gt;&lt;/a&gt; 0x00 写在前面的碎碎念&lt;/h1&gt;
&lt;p&gt;出于一些原因想要创建自己的博客记录, 可以参见文章Hello Word&lt;/p&gt;</summary>
      
    
    
    
    <category term="博客" scheme="https://kaki-jiu.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Hexo" scheme="https://kaki-jiu.github.io/tags/Hexo/"/>
    
    <category term="pure" scheme="https://kaki-jiu.github.io/tags/pure/"/>
    
  </entry>
  
</feed>
